input-language C/C++
decl-version 2.0
var-comparability none

ppt ..__VERIFIER_atomic_CAS():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int
 variable e
  var-kind variable
  rep-type int
  dec-type int
  flags is_param
 variable u
  var-kind variable
  rep-type int
  dec-type int
  flags is_param

ppt ..__VERIFIER_atomic_CAS():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int
 variable e
  var-kind variable
  rep-type int
  dec-type int
  flags is_param
 variable u
  var-kind variable
  rep-type int
  dec-type int
  flags is_param

ppt ..inc():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int

ppt ..inc():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int

ppt ..dec():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int

ppt ..dec():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int
 variable ::inc_flag
  var-kind variable
  rep-type int
  dec-type int
 variable ::dec_flag
  var-kind variable
  rep-type int
  dec-type int
 variable return
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_41_50_0():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_41_50_0():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_42_50_1():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_42_50_1():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_50_50_2():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_50_50_2():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_67_77_3():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_67_77_3():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_68_77_4():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_68_77_4():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_77_77_5():::ENTER
 ppt-type enter
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_77_77_5():::EXIT0
 ppt-type subexit
 variable ::value
  var-kind variable
  rep-type int
  dec-type int

input-language C/C++
decl-version 2.0
var-comparability none

..inc():::ENTER
this_invocation_nonce
0
::value
2
1
::inc_flag
0
1
::dec_flag
0
1

..main.c_41_50_0():::ENTER
this_invocation_nonce
1
::value
2
1

..main.c_41_50_0():::EXIT0
this_invocation_nonce
1
::value
3
1

..main.c_42_50_1():::ENTER
this_invocation_nonce
1
::value
2
1

..main.c_42_50_1():::EXIT0
this_invocation_nonce
1
::value
3
1

..__VERIFIER_atomic_CAS():::ENTER
this_invocation_nonce
1
::value
2
1
::inc_flag
0
1
::dec_flag
0
1
e
2
1
u
3
1

..__VERIFIER_atomic_CAS():::EXIT0
this_invocation_nonce
1
::value
3
1
::inc_flag
1
1
::dec_flag
0
1
e
2
1
u
3
1

..main.c_50_50_2():::ENTER
this_invocation_nonce
1
::value
3
1

..main.c_50_50_2():::EXIT0
this_invocation_nonce
1
::value
3
1

..inc():::EXIT0
this_invocation_nonce
0
::value
3
1
::inc_flag
1
1
::dec_flag
0
1

