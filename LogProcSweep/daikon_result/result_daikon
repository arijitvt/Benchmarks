===========================================================================
..add_log_entry():::ENTER
::shared_log == log
log[].num_entries == log[].lock.__data.__lock
log[].num_entries == log[].lock.__data.__owner
log[].num_entries == log[].lock.__data.__kind
log[].num_entries == log[].lock.__data.__spins
log[].num_entries == log[].lock.__align
log[].lock.__data.__count == log[].lock.__data.__nusers
::shared_log has only one value
log[].log_entry_list.log_entry == [HEAD]
log[].log_entry_list.log_entry elements == "HEAD"
log[].log_entry_list.next == [null]
log[].log_entry_list.next elements == null
log[].num_entries == [0]
log[].num_entries elements == 0
log[].lock.__data.__count == [0]
log[].lock.__data.__count elements == 0
log[].lock.__size == []
log[].lock.__size elements == ""
entry == "LOG"
===========================================================================
..add_log_entry():::EXIT
::shared_log == orig(::shared_log)
::shared_log == orig(log)
log[].log_entry_list.next->next == orig(log[].log_entry_list.next)
log[].lock.__data.__lock == log[].lock.__data.__owner
log[].lock.__data.__lock == log[].lock.__data.__kind
log[].lock.__data.__lock == log[].lock.__data.__spins
log[].lock.__data.__lock == log[].lock.__align
log[].lock.__data.__lock == orig(log[].num_entries)
log[].lock.__data.__lock == orig(log[].lock.__data.__lock)
log[].lock.__data.__lock == orig(log[].lock.__data.__owner)
log[].lock.__data.__lock == orig(log[].lock.__data.__kind)
log[].lock.__data.__lock == orig(log[].lock.__data.__spins)
log[].lock.__data.__lock == orig(log[].lock.__align)
log[].lock.__data.__count == log[].lock.__data.__nusers
log[].lock.__data.__count == orig(log[].lock.__data.__count)
log[].lock.__data.__count == orig(log[].lock.__data.__nusers)
::shared_log has only one value
log[].log_entry_list.log_entry == [HEAD]
log[].log_entry_list.log_entry elements == "HEAD"
log[].log_entry_list.next contains no nulls and has only one value, of length 1
log[].log_entry_list.next elements has only one value
log[].log_entry_list.next->log_entry == [LOG]
log[].log_entry_list.next->log_entry elements == "LOG"
log[].log_entry_list.next->next == [null]
log[].log_entry_list.next->next elements == null
log[].num_entries == [1]
log[].num_entries elements == 1
log[].lock.__data.__lock == [0]
log[].lock.__data.__lock elements == 0
log[].lock.__data.__count == [0]
log[].lock.__data.__count elements == 0
log[].lock.__size == []
log[].lock.__size elements == ""
orig(entry) in log[].log_entry_list.next->log_entry
===========================================================================
..init_log():::ENTER
::shared_log == log
::shared_log has only one value
===========================================================================
..init_log():::EXIT
::shared_log == orig(::shared_log)
::shared_log == orig(log)
log[].num_entries == log[].lock.__data.__lock
log[].num_entries == log[].lock.__data.__owner
log[].num_entries == log[].lock.__data.__kind
log[].num_entries == log[].lock.__data.__spins
log[].num_entries == log[].lock.__align
log[].lock.__data.__count == log[].lock.__data.__nusers
::shared_log has only one value
log[].log_entry_list.log_entry == [HEAD]
log[].log_entry_list.log_entry elements == "HEAD"
log[].log_entry_list.next == [null]
log[].log_entry_list.next elements == null
log[].num_entries == [0]
log[].num_entries elements == 0
log[].lock.__data.__count == [0]
log[].lock.__data.__count elements == 0
log[].lock.__size == []
log[].lock.__size elements == ""
===========================================================================
..logging():::ENTER
::shared_log has only one value
entry == "LOG"
===========================================================================
..logging():::EXIT
::shared_log == orig(::shared_log)
::shared_log has only one value
===========================================================================
..main():::ENTER
argc == size(argv[])
::shared_log == null
argc == 1
argv has only one value
argv[] == [./output]
argv[] elements == "./output"
===========================================================================
..main():::EXIT
return == size(argv[])-1
return == orig(size(argv[]))-1
::shared_log has only one value
argv[] == [./output]
argv[] elements == "./output"
===========================================================================
..new_log_entry():::ENTER
::shared_log has only one value
===========================================================================
..new_log_entry():::EXIT
::shared_log == orig(::shared_log)
::shared_log has only one value
return has only one value
===========================================================================
..t1_main():::ENTER
::shared_log has only one value
args == null
===========================================================================
..t1_main():::EXIT
::shared_log == orig(::shared_log)
return == orig(args)
::shared_log has only one value
return == null
===========================================================================
..t2_main():::ENTER
::shared_log has only one value
args == null
===========================================================================
..t2_main():::EXIT
return == orig(args)
::shared_log has only one value
return == null
Exiting Daikon.
