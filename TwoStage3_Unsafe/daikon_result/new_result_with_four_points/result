Daikon version 5.0.0, released January 3, 2014; http://pag.csail.mit.edu/daikon.
Reading declaration files [6:40:51 PM]:                                                                                                                                                                                                                                Processing trace data; reading 4 dtrace files:
[6:40:52 PM]: Finished reading output_3.dtrace                                 
                                                                               ===========================================================================
..funcA():::ENTER
::iTThreads == 2
::iRThreads == 1
param == null
::data1Value <= ::data2Value
===========================================================================
..funcA():::EXIT
::iTThreads == ::data2Value
::iTThreads == orig(::iTThreads)
::iRThreads == ::data1Value
::iRThreads == orig(::iRThreads)
return == orig(param)
::iTThreads == 2
::iRThreads == 1
return == null
===========================================================================
..funcB():::ENTER
::iTThreads == 2
::iRThreads == 1
::data1Value one of { 0, 1, 3 }
param == null
===========================================================================
..funcB():::EXIT
::iTThreads == orig(::iTThreads)
::iRThreads == orig(::iRThreads)
::data1Value == orig(::data1Value)
::data2Value == orig(::data2Value)
return == orig(param)
::iTThreads == 2
::iRThreads == 1
::data1Value one of { 0, 1, 3 }
return == null
===========================================================================
..main():::ENTER
::iRThreads == argc
::iRThreads == size(argv[])
::data1Value == ::data2Value
::iTThreads == 2
::iRThreads == 1
argv has only one value
argv[] == [./output]
argv[] elements == "./output"
===========================================================================
..main():::EXIT
::iTThreads == ::data2Value
::iTThreads == orig(::iTThreads)
::iRThreads == ::data1Value
::iRThreads == orig(::iRThreads)
::iRThreads == orig(argc)
::iRThreads == orig(size(argv[]))
return == size(argv[])-1
return == orig(size(argv[]))-1
::iTThreads == 2
::iRThreads == 1
argv[] == [./output]
argv[] elements == "./output"
Exiting Daikon.
