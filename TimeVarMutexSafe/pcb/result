 ===========================================================================
..allocator():::ENTER
::m_inode == ::inode
::m_inode == ::m_busy
::m_inode == ::busy
::m_inode == ::block
::m_inode == 0
===========================================================================
..allocator():::EXIT
::m_inode == ::m_busy
::m_inode == orig(::m_inode)
::m_inode == orig(::inode)
::m_inode == orig(::m_busy)
::m_inode == orig(::busy)
::m_inode == orig(::block)
::inode == ::busy
::inode == ::block
::m_inode == 0
::inode == 1
===========================================================================
..de_allocator():::ENTER
::m_inode == ::m_busy
::m_inode == 0
::inode one of { 0, 1 }
::busy one of { 0, 1 }
::block one of { 0, 1 }
::m_inode <= ::inode
::m_inode <= ::busy
::m_inode <= ::block
::inode <= ::busy
::inode >= ::block
::busy >= ::block
===========================================================================
..de_allocator():::EXIT
::m_inode == ::m_busy
::m_inode == orig(::m_inode)
::m_inode == orig(::m_busy)
::m_inode == 0
::inode one of { 0, 1 }
::busy one of { 0, 1 }
::block one of { 0, 1 }
::m_inode <= ::inode
::m_inode <= ::busy
::m_inode <= ::block
::m_inode <= orig(::inode)
::m_inode <= orig(::busy)
::m_inode <= orig(::block)
::inode <= ::busy
::inode >= ::block
::inode >= orig(::inode)
::inode >= orig(::block)
::busy >= ::block
::busy >= orig(::inode)
::busy >= orig(::busy)
::busy >= orig(::block)
::block >= orig(::block)
===========================================================================
..main():::ENTER
::m_inode == ::inode
::m_inode == ::m_busy
::m_inode == ::busy
::m_inode == ::block
::m_inode == 0
===========================================================================
..main():::EXIT
::m_inode == ::m_busy
::m_inode == return
::m_inode == orig(::m_inode)
::m_inode == orig(::inode)
::m_inode == orig(::m_busy)
::m_inode == orig(::busy)
::m_inode == orig(::block)
::inode == ::busy
::inode == ::block
::m_inode == 0
::inode == 1
===========================================================================
..main.c_21_0():::ENTER
::inode == 0
===========================================================================
..main.c_21_0():::EXIT
::inode == orig(::inode)
::inode == 0
===========================================================================
..main.c_23_1():::ENTER
::busy == 0
===========================================================================
..main.c_23_1():::EXIT
::busy == 1
===========================================================================
..main.c_25_2():::ENTER
::inode == 0
===========================================================================
..main.c_25_2():::EXIT
::inode == 1
===========================================================================
..main.c_27_3():::ENTER
::block == 0
===========================================================================
..main.c_27_3():::EXIT
::block == 1
===========================================================================
..main.c_35_4():::ENTER
::busy one of { 0, 1 }
===========================================================================
..main.c_35_4():::EXIT
::busy == orig(::busy)
::busy one of { 0, 1 }
===========================================================================
..main.c_36_5():::ENTER
::block == 0
===========================================================================
..main.c_36_5():::EXIT
::block == orig(::block)
::block == 0
Exiting Daikon.
