Daikon version 5.0.0, released January 3, 2014; http://pag.csail.mit.edu/daikon.
Reading declaration files [12:43:03 PM]:                                                                                                                                                                                                                               Processing trace data; reading 12 dtrace files:
[12:43:04 PM]: Finished reading 2_3.dtrace                                     
                                                                               ===========================================================================
..main():::ENTER
::data1 == ::data2
::data1 == 0
===========================================================================
..main():::EXIT
return == orig(::data1)
return == orig(::data2)
return == 0
::data1 - ::data2 - 11 == 0
::data1 > return
::data2 > return
===========================================================================
..main.c_10_0():::ENTER
===========================================================================
..main.c_10_0():::EXIT
::data1 == orig(::data1)
===========================================================================
..main.c_10_1():::ENTER
===========================================================================
..main.c_10_1():::EXIT
::data1 - orig(::data1) - 1 == 0
===========================================================================
..main.c_14_2():::ENTER
===========================================================================
..main.c_14_2():::EXIT
::data2 == orig(::data2)
===========================================================================
..main.c_14_3():::ENTER
===========================================================================
..main.c_14_3():::EXIT
::data2 - orig(::data2) - 1 == 0
===========================================================================
..main.c_22_4():::ENTER
===========================================================================
..main.c_22_4():::EXIT
::data1 == orig(::data1)
===========================================================================
..main.c_22_5():::ENTER
===========================================================================
..main.c_22_5():::EXIT
::data1 - orig(::data1) - 5 == 0
===========================================================================
..main.c_26_6():::ENTER
===========================================================================
..main.c_26_6():::EXIT
::data2 == orig(::data2)
===========================================================================
..main.c_26_7():::ENTER
===========================================================================
..main.c_26_7():::EXIT
::data2 - orig(::data2) + 6 == 0
===========================================================================
..main.c_38_8():::ENTER
::data1 == 0
===========================================================================
..main.c_38_8():::EXIT
::data1 > orig(::data1)
===========================================================================
..main.c_39_9():::ENTER
::data2 == 0
===========================================================================
..main.c_39_9():::EXIT
::data2 > orig(::data2)
===========================================================================
..main.c_47_10():::ENTER
===========================================================================
..main.c_47_10():::EXIT
::data1 == orig(::data1)
===========================================================================
..main.c_47_11():::ENTER
::data2 one of { 10, 15, 20 }
===========================================================================
..main.c_47_11():::EXIT
::data2 == orig(::data2)
::data2 one of { 10, 15, 20 }
===========================================================================
..thread1():::ENTER
::data1 == ::data2
===========================================================================
..thread1():::EXIT
::data1 >= ::data2
::data1 > orig(::data1)
::data2 != orig(::data1)
===========================================================================
..thread2():::ENTER
::data1 >= ::data2
===========================================================================
..thread2():::EXIT
::data1 > ::data2
::data1 > orig(::data1)
::data1 > orig(::data2)
::data2 < orig(::data1)
::data2 < orig(::data2)
Exiting Daikon.
