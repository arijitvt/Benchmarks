input-language C/C++
decl-version 2.0
var-comparability none

ppt ..thread1():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread1():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread2():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread2():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int
 variable return
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_18_23_0():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_18_23_0():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_35_1():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_35_1():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_21_36_2():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_21_36_2():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_23_38_3():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_23_38_3():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_35_40_4():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_35_40_4():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_36_40_5():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_36_40_5():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_38_40_6():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_38_40_6():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_40_40_7():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_40_40_7():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_58_63_8():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_58_63_8():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_59_74_9():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_59_74_9():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_61_75_10():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_61_75_10():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_63_77_11():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_63_77_11():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_74_79_12():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_74_79_12():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_75_79_13():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_75_79_13():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_77_79_14():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_77_79_14():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_79_79_15():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_79_79_15():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

input-language C/C++
decl-version 2.0
var-comparability none

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

..main():::EXIT0
this_invocation_nonce
0
::data1
26
1
::data2
15
1
::ma
0
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::data1
20
1
::data2
20
1
::ma
0
1
::mb
0
1

