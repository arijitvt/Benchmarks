input-language C/C++
decl-version 2.0
var-comparability none

ppt ..thread1():::ENTER
 ppt-type enter
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread1():::EXIT0
 ppt-type subexit
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread2():::ENTER
 ppt-type enter
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..thread2():::EXIT0
 ppt-type subexit
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::ENTER
 ppt-type enter
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::EXIT0
 ppt-type subexit
 variable ::ma
  var-kind variable
  rep-type int
  dec-type int
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int
 variable ::mb
  var-kind variable
  rep-type int
  dec-type int
 variable return
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_10_0():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_10_0():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_10_1():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_10_1():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_14_2():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_14_2():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_14_3():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_14_3():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_4():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_4():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_5():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_5():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_26_6():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_26_6():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_26_7():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_26_7():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_38_8():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_38_8():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_39_9():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_39_9():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_10():::ENTER
 ppt-type enter
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_10():::EXIT0
 ppt-type subexit
 variable ::data1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_11():::ENTER
 ppt-type enter
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_11():::EXIT0
 ppt-type subexit
 variable ::data2
  var-kind variable
  rep-type int
  dec-type int

input-language C/C++
decl-version 2.0
var-comparability none

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

..main():::ENTER
this_invocation_nonce
0
::ma
0
1
::data1
0
1
::data2
0
1
::mb
0
1

..main.c_38_8():::ENTER
this_invocation_nonce
1
::data1
0
1

..main.c_38_8():::EXIT0
this_invocation_nonce
1
::data1
10
1

..main.c_39_9():::ENTER
this_invocation_nonce
1
::data2
0
1

..main.c_39_9():::EXIT0
this_invocation_nonce
1
::data2
10
1

..main.c_47_10():::ENTER
this_invocation_nonce
1
::data1
16
1

..main.c_47_10():::EXIT0
this_invocation_nonce
1
::data1
16
1

..main():::EXIT0
this_invocation_nonce
0
::ma
0
1
::data1
16
1
::data2
5
1
::mb
0
1
return
0
1

