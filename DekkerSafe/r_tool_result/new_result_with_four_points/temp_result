===========================================================================
..main():::ENTER
::flag1 == ::flag2
::flag1 == ::turn
::flag1 == ::x
::flag1 == 0
===========================================================================
..main():::EXIT
return == orig(::flag1)
return == orig(::flag2)
return == orig(::turn)
return == orig(::x)
::flag1 one of { 0, 1 }
::flag2 one of { 0, 1 }
::turn one of { 0, 1 }
::x one of { 0, 1 }
return == 0
::flag1 >= return
::flag2 <= ::turn
::flag2 >= return
::turn >= ::x
::turn >= return
::x >= return
===========================================================================
..thr1():::ENTER
::flag1 == ::flag2
::flag1 == ::turn
::flag1 == ::x
::flag1 == 0
===========================================================================
..thr1():::EXIT
::flag1 one of { 0, 1 }
::flag2 one of { 0, 1 }
::turn one of { 0, 1 }
::x one of { 0, 1 }
::flag1 <= ::flag2
::flag1 != ::turn
::flag1 >= orig(::flag1)
::flag2 >= ::x
::flag2 >= orig(::flag1)
::turn >= ::x
::turn >= orig(::flag1)
::x >= orig(::flag1)
===========================================================================
..thr2():::ENTER
::flag2 == ::x
::flag1 one of { 0, 1 }
::flag2 == 0
::turn one of { 0, 1 }
::flag1 >= ::flag2
::flag2 <= ::turn
===========================================================================
..thr2():::EXIT
::flag1 one of { 0, 1 }
::flag2 one of { 0, 1 }
::turn one of { 0, 1 }
::x one of { 0, 1 }
::flag1 >= ::flag2
::flag1 >= orig(::flag2)
::flag2 <= ::turn
::flag2 >= orig(::flag2)
::turn >= ::x
::turn >= orig(::flag2)
::turn >= orig(::turn)
::x >= orig(::flag2)
Exiting Daikon.
