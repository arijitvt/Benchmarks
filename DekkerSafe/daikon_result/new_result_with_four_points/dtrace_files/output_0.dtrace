input-language C/C++
decl-version 2.0
var-comparability none

ppt ..thr1():::ENTER
  ppt-type enter
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int

ppt ..thr1():::EXIT0
  ppt-type subexit
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int
  variable return
    var-kind variable
    rep-type hashcode
    dec-type void*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..thr2():::ENTER
  ppt-type enter
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int

ppt ..thr2():::EXIT0
  ppt-type subexit
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int
  variable return
    var-kind variable
    rep-type hashcode
    dec-type void*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..main():::ENTER
  ppt-type enter
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::flag1
    var-kind variable
    rep-type int
    dec-type int
  variable ::flag2
    var-kind variable
    rep-type int
    dec-type int
  variable ::turn
    var-kind variable
    rep-type int
    dec-type int
  variable ::x
    var-kind variable
    rep-type int
    dec-type int
  variable return
    var-kind variable
    rep-type int
    dec-type int

input-language C/C++
decl-version 2.0
var-comparability none


..main():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr2():::ENTER
this_invocation_nonce
1
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr2():::EXIT0
this_invocation_nonce
1
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
1
1
return
0x0
1
return[..]
nonsensical
2

..thr1():::ENTER
this_invocation_nonce
2
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
1
1

..thr1():::EXIT0
this_invocation_nonce
2
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
0
1
return
0x0
1
return[..]
nonsensical
2

..main():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
0
1
return
0
1
