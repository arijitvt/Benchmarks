input-language C/C++
decl-version 2.0
var-comparability none

ppt ..thr1():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..thr1():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..thr2():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..thr2():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable return
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_22_0():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_22_0():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_20_23_1():::ENTER
 ppt-type enter
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_20_23_1():::EXIT0
 ppt-type subexit
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_24_2():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_24_2():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_23_27_3():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_23_27_3():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_31_4():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_31_4():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_27_32_5():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_27_32_5():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_31_35_6():::ENTER
 ppt-type enter
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_31_35_6():::EXIT0
 ppt-type subexit
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_32_36_7():::ENTER
 ppt-type enter
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_32_36_7():::EXIT0
 ppt-type subexit
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_35_36_8():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_35_36_8():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_36_36_9():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_36_36_9():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_43_46_10():::ENTER
 ppt-type enter
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_43_46_10():::EXIT0
 ppt-type subexit
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_44_47_11():::ENTER
 ppt-type enter
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_44_47_11():::EXIT0
 ppt-type subexit
 variable ::flag1
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_48_12():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_48_12():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_51_13():::ENTER
 ppt-type enter
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_47_51_13():::EXIT0
 ppt-type subexit
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_48_55_14():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_48_55_14():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_51_56_15():::ENTER
 ppt-type enter
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_51_56_15():::EXIT0
 ppt-type subexit
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int
 variable ::x
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_55_59_16():::ENTER
 ppt-type enter
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_55_59_16():::EXIT0
 ppt-type subexit
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_56_60_17():::ENTER
 ppt-type enter
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_56_60_17():::EXIT0
 ppt-type subexit
 variable ::x
  var-kind variable
  rep-type int
  dec-type int
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_59_60_18():::ENTER
 ppt-type enter
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_59_60_18():::EXIT0
 ppt-type subexit
 variable ::turn
  var-kind variable
  rep-type int
  dec-type int
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_60_60_19():::ENTER
 ppt-type enter
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_60_60_19():::EXIT0
 ppt-type subexit
 variable ::flag2
  var-kind variable
  rep-type int
  dec-type int

input-language C/C++
decl-version 2.0
var-comparability none

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
1
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
1
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_19_22_0():::ENTER
this_invocation_nonce
1
::flag1
0
1
::flag2
0
1
::turn
0
1

..main.c_19_22_0():::EXIT0
this_invocation_nonce
1
::flag1
1
1
::flag2
1
1
::turn
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
1
1
::flag2
1
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_19_22_0():::ENTER
this_invocation_nonce
1
::flag1
0
1
::flag2
1
1
::turn
0
1

..main.c_19_22_0():::EXIT0
this_invocation_nonce
1
::flag1
1
1
::flag2
1
1
::turn
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
1
1
::flag2
1
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
1
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_31_35_6():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1

..main.c_31_35_6():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1

..main.c_32_36_7():::ENTER
this_invocation_nonce
1
::x
0
1
::turn
0
1
::flag1
1
1

..main.c_32_36_7():::EXIT0
this_invocation_nonce
1
::x
0
1
::turn
1
1
::flag1
0
1

..main.c_35_36_8():::ENTER
this_invocation_nonce
1
::turn
0
1
::flag1
1
1

..main.c_35_36_8():::EXIT0
this_invocation_nonce
1
::turn
1
1
::flag1
0
1

..main.c_36_36_9():::ENTER
this_invocation_nonce
1
::flag1
1
1

..main.c_36_36_9():::EXIT0
this_invocation_nonce
1
::flag1
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
0
1
::flag2
1
1
::turn
1
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_19_22_0():::ENTER
this_invocation_nonce
1
::flag1
0
1
::flag2
0
1
::turn
0
1

..main.c_19_22_0():::EXIT0
this_invocation_nonce
1
::flag1
1
1
::flag2
1
1
::turn
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
1
1
::flag2
1
1
::turn
0
1
::x
0
1

..thr1():::ENTER
this_invocation_nonce
0
::flag1
0
1
::flag2
0
1
::turn
0
1
::x
0
1

..main.c_19_22_0():::ENTER
this_invocation_nonce
1
::flag1
0
1
::flag2
1
1
::turn
0
1

..main.c_19_22_0():::EXIT0
this_invocation_nonce
1
::flag1
1
1
::flag2
1
1
::turn
0
1

..thr1():::EXIT0
this_invocation_nonce
0
::flag1
1
1
::flag2
1
1
::turn
0
1
::x
0
1

