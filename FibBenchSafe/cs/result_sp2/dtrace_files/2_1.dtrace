input-language C/C++
decl-version 2.0
var-comparability none

ppt ..t1():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..t1():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..t2():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..t2():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable argc
  var-kind variable
  rep-type int
  dec-type int
  flags is_param

ppt ..main():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable argc
  var-kind variable
  rep-type int
  dec-type int
  flags is_param
 variable return
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_21_0():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_19_21_0():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_20_22_1():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_20_22_1():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_21_24_2():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_21_24_2():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_24_3():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_22_24_3():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_24_4():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_24_4():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_24_5():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_24_24_5():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_41_43_6():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_41_43_6():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_42_44_7():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_42_44_7():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_43_46_8():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_43_46_8():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int
 variable ::j
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_44_46_9():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_44_46_9():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_46_10():::ENTER
 ppt-type enter
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_46_10():::EXIT0
 ppt-type subexit
 variable ::j
  var-kind variable
  rep-type int
  dec-type int
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_46_11():::ENTER
 ppt-type enter
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

ppt ..main.c_46_46_11():::EXIT0
 ppt-type subexit
 variable ::i
  var-kind variable
  rep-type int
  dec-type int

input-language C/C++
decl-version 2.0
var-comparability none

..t2():::ENTER
this_invocation_nonce
0
::i
12
1
::j
2
1

..main.c_41_43_6():::ENTER
this_invocation_nonce
1
::j
2
1
::i
12
1

..main.c_41_43_6():::EXIT0
this_invocation_nonce
1
::j
2
1
::i
12
1

..main.c_42_44_7():::ENTER
this_invocation_nonce
1
::j
2
1
::i
12
1

..main.c_42_44_7():::EXIT0
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_43_46_8():::ENTER
this_invocation_nonce
1
::i
12
1
::j
2
1

..main.c_43_46_8():::EXIT0
this_invocation_nonce
1
::i
12
1
::j
14
1

..main.c_44_46_9():::ENTER
this_invocation_nonce
1
::j
2
1
::i
12
1

..main.c_44_46_9():::EXIT0
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_46_46_10():::ENTER
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_46_46_10():::EXIT0
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_46_46_11():::ENTER
this_invocation_nonce
1
::i
12
1

..main.c_46_46_11():::EXIT0
this_invocation_nonce
1
::i
12
1

..main.c_41_43_6():::ENTER
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_41_43_6():::EXIT0
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_42_44_7():::ENTER
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_42_44_7():::EXIT0
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_43_46_8():::ENTER
this_invocation_nonce
1
::i
12
1
::j
14
1

..main.c_43_46_8():::EXIT0
this_invocation_nonce
1
::i
12
1
::j
26
1

..main.c_44_46_9():::ENTER
this_invocation_nonce
1
::j
14
1
::i
12
1

..main.c_44_46_9():::EXIT0
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_46_46_10():::ENTER
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_46_46_10():::EXIT0
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_46_46_11():::ENTER
this_invocation_nonce
1
::i
12
1

..main.c_46_46_11():::EXIT0
this_invocation_nonce
1
::i
12
1

..main.c_41_43_6():::ENTER
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_41_43_6():::EXIT0
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_42_44_7():::ENTER
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_42_44_7():::EXIT0
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_43_46_8():::ENTER
this_invocation_nonce
1
::i
12
1
::j
26
1

..main.c_43_46_8():::EXIT0
this_invocation_nonce
1
::i
12
1
::j
38
1

..main.c_44_46_9():::ENTER
this_invocation_nonce
1
::j
26
1
::i
12
1

..main.c_44_46_9():::EXIT0
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_46_46_10():::ENTER
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_46_46_10():::EXIT0
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_46_46_11():::ENTER
this_invocation_nonce
1
::i
12
1

..main.c_46_46_11():::EXIT0
this_invocation_nonce
1
::i
12
1

..main.c_41_43_6():::ENTER
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_41_43_6():::EXIT0
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_42_44_7():::ENTER
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_42_44_7():::EXIT0
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_43_46_8():::ENTER
this_invocation_nonce
1
::i
12
1
::j
38
1

..main.c_43_46_8():::EXIT0
this_invocation_nonce
1
::i
12
1
::j
50
1

..main.c_44_46_9():::ENTER
this_invocation_nonce
1
::j
38
1
::i
12
1

..main.c_44_46_9():::EXIT0
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_46_46_10():::ENTER
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_46_46_10():::EXIT0
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_46_46_11():::ENTER
this_invocation_nonce
1
::i
12
1

..main.c_46_46_11():::EXIT0
this_invocation_nonce
1
::i
12
1

..main.c_41_43_6():::ENTER
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_41_43_6():::EXIT0
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_42_44_7():::ENTER
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_42_44_7():::EXIT0
this_invocation_nonce
1
::j
62
1
::i
12
1

..main.c_43_46_8():::ENTER
this_invocation_nonce
1
::i
12
1
::j
50
1

..main.c_43_46_8():::EXIT0
this_invocation_nonce
1
::i
12
1
::j
62
1

..main.c_44_46_9():::ENTER
this_invocation_nonce
1
::j
50
1
::i
12
1

..main.c_44_46_9():::EXIT0
this_invocation_nonce
1
::j
62
1
::i
12
1

..main.c_46_46_10():::ENTER
this_invocation_nonce
1
::j
62
1
::i
12
1

..main.c_46_46_10():::EXIT0
this_invocation_nonce
1
::j
62
1
::i
12
1

..main.c_46_46_11():::ENTER
this_invocation_nonce
1
::i
12
1

..main.c_46_46_11():::EXIT0
this_invocation_nonce
1
::i
12
1

..t2():::EXIT0
this_invocation_nonce
0
::i
12
1
::j
62
1

